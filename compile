#!/bin/bash

cd host && docker-compose build && docker-compose up -d && docker-compose ps
docker cp dump/blog.sql mysql_blog:/blog.sql
docker cp dump/blog_auth.sql mysql_auth:/blog_auth.sql
docker exec mysql_auth /bin/bash -c "mysql -u root --password=root --execute='DROP DATABASE IF EXISTS blog'"
docker exec mysql_blog /bin/bash -c "mysql -u root --password=root --execute='DROP DATABASE IF EXISTS blog'"
docker exec mysql_auth /bin/bash -c "mysql -u root --password=root --execute='CREATE DATABASE blog CHARACTER SET utf8 COLLATE utf8_unicode_ci'"
docker exec mysql_blog /bin/bash -c "mysql -u root --password=root --execute='CREATE DATABASE blog CHARACTER SET utf8 COLLATE utf8_unicode_ci'"
docker exec mysql_blog /bin/bash -c "mysql -u root --password=root --default-character-set=utf8 --comments --database=blog < /blog.sql"
docker exec mysql_auth /bin/bash -c "mysql -u root --password=root --default-character-set=utf8 --comments --database=blog < /blog_auth.sql"
docker exec php_gate /bin/bash -c "composer install"
docker exec php_post_1 /bin/bash -c "composer install"
docker exec php_post_2 /bin/bash -c "composer install"
docker exec php_comment_1 /bin/bash -c "composer install"
docker exec php_comment_2 /bin/bash -c "composer install"
docker exec php_auth_1 /bin/bash -c "composer install"
docker exec php_auth_2 /bin/bash -c "composer install"